plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

static def releaseTime() {
    return new Date().format("yyMMdd-HHmm", TimeZone.getTimeZone("Asia/Chongqing"))
}

android {
    def versions = rootProject.ext.android
    compileSdkVersion versions.compileSdkVersion
    buildToolsVersion versions.buildToolsVersion

    defaultConfig {
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkV
        versionCode versions.versionCode
        versionName versions.versionName

        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    // aar重命名
    libraryVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.aar')) {
//                def newFileName = "LearnGradle_${defaultConfig.versionName}_${releaseTime()}_${variant.buildType.name}.aar"
                def newFileName = "LearnGradle_${variant.buildType.name}.aar"
                outputFileName = outputFile.name.replace(outputFile.name, newFileName)
            }
        }
    }
}

dependencies {
    def dependencies = rootProject.ext.dependencies

    implementation dependencies.'kotlin'
    implementation dependencies.'core-ktx'
}

/**
 * 将生产的aar文件copy到指定目录
 */
task aarToLibs(type: Copy, dependsOn: 'assembleRelease') {
    group = 'android'
    from 'build/outputs/aar/'
    into 'export'
}